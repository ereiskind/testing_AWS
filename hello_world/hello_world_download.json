{
	"jobConfig": {
		"name": "hello_world",
		"description": "",
		"role": "arn:aws:iam::612489222122:role/service-role/AWSGlueServiceRole",
		"command": "pythonshell",
		"version": "3.0",
		"runtime": null,
		"workerType": null,
		"numberOfWorkers": null,
		"maxCapacity": 0.0625,
		"jobRunQueuingEnabled": false,
		"maxRetries": 0,
		"timeout": 2880,
		"maxConcurrentRuns": 1,
		"security": "none",
		"scriptName": "hello_world.py",
		"scriptLocation": "s3://aws-glue-assets-612489222122-us-east-1/scripts/",
		"language": "python-3.9",
		"spark": false,
		"jobParameters": [],
		"tags": [],
		"jobMode": "DEVELOPER_MODE",
		"createdOn": "2025-02-14T17:53:17.651Z",
		"developerMode": true,
		"connectionsList": [],
		"temporaryDirectory": "s3://aws-glue-assets-612489222122-us-east-1/temporary/",
		"glueHiveMetastore": true,
		"etlAutoTuning": false,
		"observabilityMetrics": false,
		"pythonShellPrebuiltLibraryOption": "none",
		"flexExecution": false,
		"minFlexWorkers": null,
		"sourceControlDetails": {
			"Provider": "GITHUB",
			"Repository": "testing_AWS",
			"Branch": "main",
			"Folder": "hello_world",
			"LastCommitId": "90a875fec6f9732224349cebac4fda1c0c9fda3c"
		},
		"maintenanceWindow": null,
		"etlAutoScaling": false,
		"dataLineage": false
	},
	"hasBeenSaved": false,
	"usageProfileName": null,
	"script": "import sys\nimport logging\nfrom awsglue.utils import getResolvedOptions\nimport subprocess\n\nfreeze = subprocess.check_output([sys.executable, '-m', 'pip', 'freeze'])\nprint(freeze)\n\ndef configure_logging():\n    logging.basicConfig(\n        level=logging.INFO,\n        format=\"[%(asctime)s] %(name)s::%(lineno)d - %(message)s\",  # \"[timestamp] module name::line number - error message\"\n        datefmt=\"%Y-%m-%d %H:%M:%S\",\n        encoding=\"utf-8\",\n    )\n\nname_log = logging.getLogger(__name__)\nprint(f\"`name_log` before `basicConfig`: {name_log}\")\nlogging.basicConfig(level=logging.DEBUG)\nprint(f\"`name_log` before `basicConfig`: {name_log}\")\n\nargs = getResolvedOptions(sys.argv, [\"name\"])\n\nif __name__ == '__main__':\n    statement = f\", {args['name']}!\"\n    print(\"Hello\" + statement)\n    name_log.debug(\"This a debug statement\")\n    name_log.info(\"This an info statement\")\n    name_log.warning(\"This a warning statement\")\n    name_log.error(\"This an error statement\")\n    name_log.critical(\"This a critical statement\")\n    print(\"Goodbye\" + statement)"
}